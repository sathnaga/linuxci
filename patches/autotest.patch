From ebd3e1c184dc516a1646f254702c37a3784da12b Mon Sep 17 00:00:00 2001
From: root <root@tuleta4u-lp2.aus.stglabs.ibm.com>
Date: Thu, 13 Oct 2016 07:22:30 -0500
Subject: [PATCH] Kernel-build.py changes

---
 client/job.py    |  6 +++---
 client/kernel.py | 10 ++++++++--
 2 files changed, 11 insertions(+), 5 deletions(-)

diff --git a/client/job.py b/client/job.py
index 526a2af..1124741 100644
--- a/client/job.py
+++ b/client/job.py
@@ -680,9 +680,9 @@ class base_client_job(base_job.base_job):
     def cpu_count(self):
         return utils.count_cpus()  # use total system count
 
-    def start_reboot(self):
-        self.record('START', None, 'reboot')
-        self.record('GOOD', None, 'reboot.start')
+    def start_reboot(self, subdir = None):
+        self.record('START', subdir, 'reboot')
+        self.record('GOOD', subdir, 'reboot.start')
 
     def _record_reboot_failure(self, subdir, operation, status,
                                running_id=None):
diff --git a/client/kernel.py b/client/kernel.py
index 465f126..d8144b0 100644
--- a/client/kernel.py
+++ b/client/kernel.py
@@ -328,6 +328,12 @@ class kernel(BootableKernel):
             utils.system('mv %s %s.old' % (cfg, cfg))
             utils.system("sed '%s' < %s.old > %s" % (p, cfg, cfg))
             self.config(make='oldconfig')
+            # .config generated by ppc64le_defconfig, CONFIG_LOCALVERSION_AUTO is set by default,which is adding junk values to the modules directory /lib/modules/ so unset it using make oldconfig
+            auto = '/^CONFIG_LOCALVERSION_AUTO=/s/CONFIG_LOCALVERSION_AUTO=y/\#CONFIG_LOCALVERSION_AUTO is not set/g'
+            utils.system('mv %s %s.old' % (cfg, cfg))
+            utils.system("sed '%s' %s.old > %s" % (auto, cfg, cfg))
+            utils.system('yes "n"| make oldconfig')
+
         else:
             self.config()
 
@@ -431,7 +437,7 @@ class kernel(BootableKernel):
                                 "kernel version %s under /lib/modules", version)
             version = os.path.basename(real_version_list[0])
 
-        if d.name in ['redhat', 'fedora']:
+        if d.name in ['redhat', 'fedora', 'ibm_powerkvm', 'centos']:
             try:
                 cmd = os_dep.command('dracut')
                 full_cmd = '%s -f %s %s' % (cmd, initrd, version)
@@ -624,7 +630,7 @@ class kernel(BootableKernel):
         # If no 'target_arch' given assume native compilation
         if target_arch is None:
             target_arch = utils.get_current_kernel_arch()
-            if target_arch == 'ppc64':
+            if target_arch in ['ppc64', 'ppc64le']:
                 if self.build_target == 'bzImage':
                     self.build_target = 'vmlinux'
 
-- 
2.5.0

